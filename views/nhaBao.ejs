<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The PTIT News</title>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous"> -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="stylesheet" href="/../css/trangDanhMuc2.css">
    <link rel="stylesheet" href="/../css/admin2.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="../css/admin.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination a {
            color: #007bff;
            padding: 8px 12px;
            text-decoration: none;
            border: 1px solid #ddd;
            margin: 0 4px;
            border-radius: 4px;
            transition: 0.3s;
        }

        .pagination a:hover {
            background-color: #e9ecef;
        }

        .pagination a.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        .dashboard-title {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
            font-weight: 600;
        }

        .chart-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            padding: 20px;
            margin-bottom: 30px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .chart-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);
        }

        h2 {
            color: #3498db;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
            margin-top: 0;
            font-size: 22px;
        }

        .row {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -15px;
        }

        .col {
            flex: 1;
            padding: 0 15px;
            min-width: 300px;
            margin-bottom: 20px;
        }

        canvas {
            width: 100% !important;
            height: 350px !important;
        }

        .filter-controls {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: center;
            margin-bottom: 25px;
            background-color: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .filter-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        select,
        button {
            padding: 8px 15px;
            border-radius: 4px;
            border: 1px solid #ddd;
            background-color: #fff;
            font-size: 14px;
        }

        button {
            background-color: #3498db;
            color: white;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #2980b9;
        }

        .statistics-summary {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            flex: 1;
            min-width: 200px;
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            text-align: center;
            transition: transform 0.3s;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card h3 {
            margin: 0;
            font-size: 16px;
            color: #7f8c8d;
        }

        .stat-value {
            font-size: 28px;
            font-weight: 600;
            margin: 10px 0;
            color: #2c3e50;
        }

        .stat-card.purple {
            border-top: 3px solid #9b59b6;
        }

        .stat-card.blue {
            border-top: 3px solid #3498db;
        }

        .stat-card.green {
            border-top: 3px solid #2ecc71;
        }

        .stat-card.orange {
            border-top: 3px solid #e67e22;
        }

        footer {
            text-align: center;
            margin-top: 30px;
            color: #7f8c8d;
            font-size: 14px;
            padding: 20px 0;
            border-top: 1px solid #eee;
        }

        @media (max-width: 768px) {
            .row {
                flex-direction: column;
            }

            .col {
                width: 100%;
            }
        }

        .chart-legend {
            text-align: center;
            margin-top: 10px;
            padding: 10px;
            border-top: 1px solid #eee;
        }

        .legend-item {
            display: inline-flex;
            align-items: center;
            margin: 0 10px;
        }

        .legend-color {
            width: 12px;
            height: 12px;
            margin-right: 5px;
            border-radius: 50%;
            display: inline-block;
        }
    </style>
    <script src="//cdn.ckeditor.com/4.22.1/full/ckeditor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <div class="sidebar">
        <div class="logo_content">
            <div class="logo-container">
                <img src="../assets/logoWhite.png" />
            </div>

            <i class="bi bi-list fs-3" id="btn"></i>
        </div>

        <ul class="nav_list">
            <% if (_locals.role == "NhaBao") { %>
                <li>
                    <a href="#">
                        <i class="bi bi-person-badge"></i>
                        <span class="links_name">Thông tin nhà báo</span>
                    </a>
                    <span class="tooltip">Thông tin nhà báo</span>
                </li>
                <li>
                    <a href="#">
                        <i class="bi bi-bar-chart"></i>
                        <span class="links_name">Danh sách bài viết</span>
                    </a>
                    <span class="tooltip">Danh sách bài viết</span>
                </li>
            <% } %>
            <% if (_locals.role == "NhaBao" || _locals.role == "Admin") { %>
                <li>
                    <a href="#">
                        <i class='bx bxs-plus-circle'></i>
                        <span class="links_name">Thêm bài báo</span>
                    </a>
                    <span class="tooltip">Thêm bài báo</span>
                </li>
            <% } %>
            
            <li style="margin-top: 50px; margin-right: 10px; padding-right: 10px;">
                                        <form action="/home" method="GET" style="height: 50px;">
                                            <button style="    
                                            background-color: transparent;
                                            border: none;
                                            color: white;
                                            font-size: 20px;
                                            height: 100%;
                                            " type="submit">
                                                <i class='bx bx-log-out' style="padding-right: 15px !important;"></i>
                                                <span class="links_name" style="font-size: medium;">Quay lại</span>
                                            </button>
                                        </form>
                                        <span class="tooltip">Quay lại</span>
                                    </li>
        </ul>
    </div>

    <div class="home_content">
        <div id="info-nhabao-Management" class="info_management" style="display: none;">
                <h2 class="info_management-title">Thông tin nhà báo</h2>
                <div class="info_management-flex">
                    <div class="info_management-content">
                    <form action="/auth/changePwdQuanTri" method="POST">
                        <div class="info_management-row">
                            <label class="info_management-label">Họ và Tên:</label>
                            <div class="info_management-input-group">
                                <input type="text" id="info_management-name" class="info_management-input"
                                    name="newUsername" value="<%= user[0].username %>" disabled>
                            </div>
                        </div>
                        <!-- Email (không chỉnh sửa, thêm placeholder) -->
                        <div class="info_management-row">
                            <label class="info_management-label">Email:</label>
                            <div class="info_management-input-group">
                                <input type="email" id="info_management-email" class="info_management-input"
                                    value="<%= user[0].email %>" disabled>
                                <div class="info_management-email-placeholder"></div>
                            </div>
                        </div>
                        <!-- Mật khẩu -->
                        <div class="info_management-row">
                            <label class="info_management-label">Mật khẩu:</label>
                            <div class="info_management-input-group">
                                <input type="password" id="info_management-password" class="info_management-input"
                                    name="pwdInp" value="<%= user[0].password %>" disabled>
                                <div class="info_management-button-group">
                                    <button type="button" id="info_management-change-password"
                                        class="info_management-button">🔑</button>
                                </div>
                                <div class="info_management-button-group">
                                    <button type="submit" id="info_management-edit-name" class="info_management-button"
                                        style="display:none"><i class="bi bi-floppy-fill"></i></button>
                                </div>
                            </div>
                        </div>
                    </form>
                    </div>
                    <div class="info_management-side">
                        <div class="statistic-overview">
                            <div class="statistic-box">
                                <div class="statistic-number" id="statisticTotalArticles">0</div>
                                <div class="statistic-label">Tổng số bài viết</div>
                            </div>
                            <div class="statistic-box">
                                <div class="statistic-number" id="statisticTotalViews">0</div>
                                <div class="statistic-label">Tổng lượt xem</div>
                            </div>
                            <div class="statistic-box">
                                <div class="statistic-number" id="statisticTotalLikes">0</div>
                                <div class="statistic-label">Tổng lượt thích</div>
                            </div>
                            <div class="statistic-box">
                                <div class="statistic-number" id="statisticTotalComments">0</div>
                                <div class="statistic-label">Tổng bình luận</div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>

        <div id="statistic-nhabao-Management" class="info_management" style="display: none;">
                <h2 class="info_management-title">Thống kê của nhà báo</h2>
                <div class="info_management-flex">
                    <div class="info_management-side" style="width:100%">
                        <div class="info_management-tabs">
                            <button class="info_management-tab active" data-tab="statistic-my-articles">Danh sách bài viết của tôi</button>
                            <button class="info_management-tab" data-tab="statistic-approve-notify">Thông báo bài viết được duyệt</button>
                        </div>
                        <div class="info_management-tab-content" id="statistic-my-articles" style="display:block;">
                            <table class="info_management-table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Tiêu đề</th>
                                        <th>Lượt xem</th>
                                        <th>Lượt thích</th>
                                        <th>Ngày đăng</th>
                                        <th>Trạng thái</th>
                                    </tr>
                                </thead>
                                <tbody id="statisticMyArticlesBody"></tbody>
                            </table>
                        </div>
                        <div class="info_management-tab-content" id="statistic-approve-notify" style="display:none;">
                            <ul id="statisticApproveNotifyList" style="padding-left: 18px;">
                                <!-- Thông báo sẽ được render ở đây -->
                            </ul>
                        </div>
                    </div>
                </div>
        </div>

        <div id="addPostManagement" class="add_post_management" style="display: none;">
            <h2>Thêm bài báo</h2>
            <div class="action-modal-content">

                <form action="/api/insertArticles" method="POST">

                    <div class="action-form-group">
                        <label>Tên Bài báo</label>
                        <input type="text" id="addPostTitle" placeholder="Nhập tên bài báo" name="nameArticle">
                    </div>

                    <div class="action-form-group">
                        <label>Danh mục chính</label>
                        <select id="mainCategory" name="dmChinh">
                            <option value="" disabled selected>Chọn danh mục chính</option>
                            <% for ( let b=0; b < structuredCategories.length; b++ ) {%>
                                <option value="<%=structuredCategories[b].id_category%>">
                                    <%=structuredCategories[b].category_name%>
                                </option>
                                <% } %>
                        </select>
                    </div>

                    <div class="action-form-group">
                        <label>Danh mục phụ</label>
                        <select id="subCategory" name="dmPhu">
                            <option value="" disabled selected>Chọn danh mục phụ</option>
                        </select>
                    </div>

                    <div class="action-form-group">
                        <label>Ảnh bài báo</label>
                        <input type="file" id="addPostHeroImage" accept="image/*">
                        <button id="uploadImageBtn" class="btn-upload" style="background-color: #B32A45;
                            color: white;
                            border: none;
                            padding: 12px 30px;
                            border-radius: 5px;
                            cursor: pointer;
                            transition: background-color 0.3s ease;
                            font-size: 16px;
                            width: 150px">Tải ảnh lên</button>
                        <input type="hidden" id="uploadedImageUrl" name="hero_image">
                    </div>

                    <div class="action-form-group" style="grid-column: 1 / -1; width: 100% !important;">
                        <label>Tải lên file bài báo (DOCX hoặc PDF)</label>
                        <input type="file" id="uploadArticleFile" accept=".docx, .pdf">
                        <button id="processFileBtn" class="btn-upload" style="background-color: #B32A45;
                            color: white;
                            border: none;
                            padding: 12px 30px;
                            border-radius: 5px;
                            cursor: pointer;
                            transition: background-color 0.3s ease;
                            font-size: 16px;
                            width: 150px">Xử lý file</button>
                    </div>

                    <div class="action-form-group" style="grid-column: 1 / -1; width: 100% !important;">
                        <label>Nội dung bài báo</label>
                        <textarea id="addPostContent" placeholder="Nội dung bài báo sẽ hiển thị ở đây"
                            name="content"></textarea>
                    </div>

                    <div class="action-modal-footer">
                        <button type="submit" id="btnAddPost" class="btn-add">Thêm bài báo</button>
                    </div>

                </form>

            </div>
        </div>
    </div>
    <div id="loader" style="display: none !important; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 9999; display: flex; justify-content: center; align-items: center;">
        <div style="width: 50px; height: 50px; border: 5px solid #f3f3f3; border-top: 5px solid #3498db; border-radius: 50%; animation: spin 1s linear infinite;"></div>
    </div>

    <script>
        // 2. Now let's create a client-side JavaScript to handle the form submission
        // Add this to your admin.js or create a new file and include it in your admin pag
        // Handle form submission
        const addPostBtn = document.getElementById('btnAddPost');
        if (addPostBtn) {
            addPostBtn.addEventListener('click', function () {
                // Get form values
                const heading = document.getElementById('addPostTitle').value.trim();
                const user = document.getElementById('addPostAuthor').value.trim();
                const mainCategory = document.getElementById('mainCategory').value;
                const category_name = document.getElementById('subCategory').value;
                const hero_image = document.getElementById('addPostHeroImage').value.trim();
                const content = document.getElementById('addPostContent').value.trim();

                // Validate form
                if (!heading || !user || !mainCategory || !category_name || !hero_image || !content) {
                    alert('Vui lòng điền đầy đủ tất cả các trường!');
                    return;
                }

                // Create a URL-friendly alias from the title
                const name_alias = heading
                    .toLowerCase()
                    .trim()
                    .replace(/[^\w\s-]/g, '')
                    .replace(/[\s_-]+/g, '-')
                    .replace(/^-+|-+$/g, '');

                // Default to not featured
                const is_featured = 'Không';

                // Prepare data for API call to match your controller's expected format
                const articleData = {
                    user,
                    category_name,
                    heading,
                    hero_image,
                    content,
                    name_alias,
                    is_featured
                };

                // Send API request
                fetch('/add-article', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(articleData)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(data.message || 'Bài báo đã được thêm thành công');
                            // Clear form fields
                            document.getElementById('addPostTitle').value = '';
                            document.getElementById('addPostAuthor').value = '';
                            document.getElementById('mainCategory').selectedIndex = 0;
                            document.getElementById('subCategory').innerHTML = '<option value="" disabled selected>Chọn danh mục phụ</option>';
                            document.getElementById('addPostHeroImage').value = '';
                            document.getElementById('addPostContent').value = '';

                            // Hide the add form and show the post management table
                            document.getElementById('addPostManagement').style.display = 'none';
                            document.getElementById('postManagement').style.display = 'block';

                            // Reload the page to see the updated table
                            window.location.reload();
                        } else {
                            alert(data.message || 'Đã xảy ra lỗi khi thêm bài báo');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Đã xảy ra lỗi khi thêm bài báo!');
                    });
            });
        }

        // Helper function to get subcategories based on main category
        function getSubCategories(mainCategory) {
            // You might want to fetch these dynamically from your database in a production environment
            // For now, we're using a static mapping
            const categoriesMap = {
                'society': [
                    { value: 'Chính trị', text: 'Chính trị' },
                    { value: 'Pháp luật', text: 'Pháp luật' },
                    { value: 'Tin tức xã hội', text: 'Tin tức xã hội' }
                ],
                'science': [
                    { value: 'Công nghệ', text: 'Công nghệ' },
                    { value: 'Tin khoa học', text: 'Tin khoa học' },
                    { value: 'Số hóa', text: 'Số hóa' }
                ],
                'health': [
                    { value: 'Y tế', text: 'Y tế' },
                    { value: 'Dinh dưỡng', text: 'Dinh dưỡng' },
                    { value: 'Sức khỏe tâm thần', text: 'Sức khỏe tâm thần' }
                ],
                'sports': [
                    { value: 'Bóng đá', text: 'Bóng đá' },
                    { value: 'Quần vợt', text: 'Quần vợt' },
                    { value: 'Thể thao khác', text: 'Thể thao khác' }
                ],
                'entertainment': [
                    { value: 'Phim ảnh', text: 'Phim ảnh' },
                    { value: 'Âm nhạc', text: 'Âm nhạc' },
                    { value: 'Người nổi tiếng', text: 'Người nổi tiếng' }
                ],
                'education': [
                    { value: 'Đại học', text: 'Đại học' },
                    { value: 'Phổ thông', text: 'Phổ thông' },
                    { value: 'Học tập', text: 'Học tập' }
                ]
            };

            return categoriesMap[mainCategory] || [];
        }


        // 3. Add the function to show/hide the add article form
        function setupPostManagementUI() {
            const addPostBtn = document.getElementById('addPostBtn');
            const addPostManagement = document.getElementById('addPostManagement');
            const postManagement = document.getElementById('postManagement');

            if (addPostBtn) {
                addPostBtn.addEventListener('click', function () {
                    if (addPostManagement.style.display === 'none') {
                        addPostManagement.style.display = 'block';
                        postManagement.style.display = 'none';
                    } else {
                        addPostManagement.style.display = 'none';
                        postManagement.style.display = 'block';
                    }
                });
            }

            // Add cancel button functionality if needed
            const cancelAddPostBtn = document.getElementById('cancelAddPostBtn');
            if (cancelAddPostBtn) {
                cancelAddPostBtn.addEventListener('click', function () {
                    addPostManagement.style.display = 'none';
                    postManagement.style.display = 'block';
                });
            }
        }

        const uploadImageBtn = document.getElementById('uploadImageBtn');
        const addPostHeroImage = document.getElementById('addPostHeroImage');
        const uploadedImageUrl = document.getElementById('uploadedImageUrl');
        const loader = document.getElementById('loader'); // Tham chiếu đến loader

        if (uploadImageBtn && addPostHeroImage) {
            uploadImageBtn.addEventListener('click', function (event) {
                event.preventDefault(); // Ngăn form submit mặc định

                const file = addPostHeroImage.files[0];
                if (!file) {
                    alert('Vui lòng chọn một ảnh để tải lên!');
                    return;
                }

                const formData = new FormData();
                formData.append('image', file);

                // Hiển thị loader
                loader.style.display = 'flex';

                // Gửi yêu cầu tải ảnh lên API `/uploadPics`
                fetch('/upload', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        // Ẩn loader
                        loader.style.display = 'none';

                        if (data.success) {
                            uploadedImageUrl.value = data.url; // Lưu URL ảnh vào input ẩn
                            alert('Tải ảnh lên thành công!');
                        } else {
                            alert('Đã xảy ra lỗi khi tải ảnh lên!');
                        }
                    })
                    .catch(error => {
                        // Ẩn loader
                        loader.style.display = 'none';

                        console.error('Lỗi khi tải ảnh lên:', error);
                        alert('Đã xảy ra lỗi khi tải ảnh lên!');
                    });
            });
        }

        const processFileBtn = document.getElementById('processFileBtn');
        const uploadArticleFile = document.getElementById('uploadArticleFile');
        const addPostContent = document.getElementById('addPostContent');

        if (processFileBtn && uploadArticleFile) {
            processFileBtn.addEventListener('click', function (event) {
                event.preventDefault(); // Ngăn form submit mặc định

                const file = uploadArticleFile.files[0];
                if (!file) {
                    alert('Vui lòng chọn một file DOCX hoặc PDF!');
                    return;
                }

                const formData = new FormData();
                formData.append('file', file);

                // Hiển thị loader
                loader.style.display = 'flex';

                // Gửi yêu cầu tải file lên API `/processFile`
                fetch('/processFile', {
                    method: 'POST',
                    body: formData,
                })
                    .then(response => response.json())
                    .then(data => {
                        // Ẩn loader
                        loader.style.display = 'none';

                        if (data.success) {
                            addPostContent.value = data.text; // Hiển thị nội dung file trong textarea
                            alert('Xử lý file thành công!');
                        } else {
                            alert('Đã xảy ra lỗi khi xử lý file!');
                        }
                    })
                    .catch(error => {
                        // Ẩn loader
                        loader.style.display = 'none';

                        console.error('Lỗi khi xử lý file:', error);
                        alert('Đã xảy ra lỗi khi xử lý file!');
                    });
            });
        }

        // Nhúng structuredCategories từ backend vào frontend

        // LỖI ĐỎ NÀY IGNORE ĐƯỢC KO CẦN SỬA !!!!!!!!!!!!!!!!!!!!!!!!
        const structuredCategories = <%- JSON.stringify(structuredCategories) %>;


        const mainCategorySelect = document.getElementById('mainCategory');
        const subCategorySelect = document.getElementById('subCategory');

        if (mainCategorySelect && subCategorySelect) {
            mainCategorySelect.addEventListener('change', function () {
                const selectedMainCategoryId = this.value;

                // Tìm danh mục chính được chọn
                const selectedMainCategory = structuredCategories.find(category => category.id_category == selectedMainCategoryId);

                // Xóa các tùy chọn hiện tại trong danh mục phụ
                subCategorySelect.innerHTML = '<option value="" disabled selected>Chọn danh mục phụ</option>';

                // Nếu có danh mục phụ, thêm chúng vào danh mục phụ
                if (selectedMainCategory && selectedMainCategory.children) {
                    selectedMainCategory.children.forEach(subCategory => {
                        const option = document.createElement('option');
                        option.value = subCategory.id_category;
                        option.textContent = subCategory.category_name;
                        subCategorySelect.appendChild(option);
                    });
                }
            });
        }
    </script>
    <style>
        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }
    </style>

    <script src="/../js/admin.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/../js/chartStats.js"></script>
</body>

</html>